services:
  # demoapp:
  #   build:
  #     context: .
  #     dockerfile: deploy/docker/demoapp.dockerfile
  #   image: takimoysha/pywebdemo_app:latest
  #   restart: always
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     cache:
  #       condition: service_healthy
  #   volumes:
  #     - .:/app
  #   ports:
  #     - 8080:8080
  #   environment:
  #     VITE_USE_SERVER_LIFESPAN: "false" # true if ssr or separate service
  #     SAQ_USE_SERVER_LIFESPAN: "false"
  #   env_file:
  #     - .env.docker

  # worker:
  #   image: takimoysha/app:latest
  #   command: litestar workers run
  #   restart: always
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     cache:
  #       condition: service_healthy
  #   env_file:
  #     - .env.docker

  postgres-private:
    image: postgres
    restart: unless-stopped
    hostname: db-private
    # networks:
    # - private.net
    volumes:
      - database-volume:/var/lib/postgresql/data
    ports:
      - 15432:5432
    environment:
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devuser
      - POSTGRES_DB=devdb
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - demoapp
      interval: 5s
      timeout: 30s
      retries: 5

  redis-like-private:
    image: valkey/valkey:latest
    hostname: cache-private
    ports:
      - 16379:6379
    command: redis-server --appendonly yes
    # networks:
    #   - private.net
    volumes:
      - cache-volume:/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 5s
      timeout: 30s
      retries: 5

  # smtp:
  #   image: mailhog/mailhog:v1.0.0
  #   container_name: dev-smtp
  #   ports:
  #     - "8025:8025"

networks:
  ## connection from swag to services
  gateway-net:
    name: gateway-net
    ipam:
      config:
        - subnet: 172.17.0.0/24 # 172.17.0.1 - 172.17.0.254

  ## connection from services to internal services like db, cache, other services
  private-net:
    name: private-net
    internal: true
    ipam:
      config:
        - subnet: 172.17.1.0/29 # 172.17.1.1 - 172.20.1.6

volumes:
  database-volume: {}
  cache-volume: {}
